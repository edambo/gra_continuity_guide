# Document Library Structure {#sec-doc_lib_structure .unnumbered}
### Folder structure 
  - Each folder in the document library should generally be associated with a specific theme or topic, which may have sub-themes and subtopics.  
    - **Do this:** `IRB Documents` or `Budget Documents`. 
    - **Do not do this:** `Budgets and IRB Documents`. 

  - Folders should not generally be associated with specific people or positions. There are at least two reasons why we don’t want to associate folders with people or positions. First, people and positions change over time. Topics can change too, but they tend to be more stable. Second, and perhaps more importantly, this is a shared document library. We shouldn’t think of anything we keep in this library as belonging to any individual. As such, the names and purposes of documents should be clear to others who may need to use them. For example, it’s going to be much easier for most people to reason about what is contained in the `IRB` folder than in the `Brad` folder. 
    - **Do this:** `IRB Documents` or `Budget Documents`. 
    - **Do not do this:** `Brad’s Documents` or `GRA Documents`. 

  - Folders that can be logically nested inside an existing folder, or two similar folders that can logically be combined under a single parent folder, should be.  
    - For example, a folder containing CITI training certificates should probably be nested in the `IRB Documents folder`.  
    - A folder containing GRA applicant resumes, a folder containing GRA work schedules, and a folder containing job announcements should probably all be nested in a `Hiring` folder, which should probably be nested in a `HR` folder.  

### Folder names 
  - Folders for programming code repositories should be written in snake case. This is to help ensure that the folder name works easily with R, Git, Bash, and other software used in the data analysis pipeline. 
    - **Do this:** `detect_public_repo`. 
    - **Do not do this:** `DETECT Public Repo`. 

  - All other folders should be written in title case.  
    - **Do this:** `Budget Documents`. 
    - **Do not do this:** `budget documents`. 

  - Folder names should be descriptive enough for most people to reasonably be able to figure out what the folder contains from the name. 
    - **Do this:** `Budget Documents`. 
    - **Do not do this:** `Brad’s Stuff` or `MU-334-011`. 

  - Folder names should be succinct. 
    - **Do this:**  `Pre-award`. 
    - **Do not do this:** `Narrative – Spec Aims – Budgets – and Other Documents Submitted to NIA in the Original Proposal`. 

  - Folder names should only include letters, numbers, underscores, or dashes. Other characters can cause syncing failures and/or issues with other file systems. 
    - **Do this:** `Materials and Operations`. 
    - **Do not do this:** `Materials & Operations`. 

  - Folders that can be naturally arranged by dates should be. The folder name should begin with the date written in the **yyyy-mm-dd** format. This format is important because dates written in this format will naturally be arranged in correct chronological order across years. Some examples of folder topics that may have a natural chronological order include IRB documents, budgets, and meeting minutes. 
    - **Do this:** `2023-02-17 Budget`. 
    - **Do not do this:** `February Budget or 02-17-2023 Budget`. 

  - Folders that can be naturally arranged in a sequential order should be. When doing so, the folder names should be sequentially numbered. Single digits should be prefixed with a zero (0). This format is important because single digits written in this format will naturally be arranged in correct sequential order when the number of folders in the sequence exceeds 9. Data analysis projects are an example where folder topics may have a natural sequential order. 
    - **Do this:**  `01_data_import, 02_data_clean, 03_table_01, 04_table_04`. 
    - **Do not do this:** `1_data_import, 2_data_clean, table_1, my_other_table`. 

  - Folders for documents related to peer-reviewed manuscripts should begin with the first author’s last name. 
    - **Do this:**  `Cannell – Protocol Paper`. 
    - **Do not do this:** `Protocol Paper`. 

  - When multiple folders have a similar theme/topic, begin the folder names with a description of the theme/topic. Doing so will ensure that all folders with that theme/topic are grouped together in the file list. 
    - **Do this:**  `Reliance Agreement UAB`, `Reliance Agreement UCSF`, `Reliance Agreement JHU`. 
    - **Do not do this:** `UAB Reliance Agreement`, `UCSF Reliance Agreement`, `JHU Reliance Agreement`. 

### File structure 
  - Files should generally be grouped together and placed in a folder that describes the theme or topic they belong to. 
  - Folders that contain a single file should be rare. 

### File names 
  - Programming code files should be written in snake case. This is to help ensure that the file name works easily with R, Git, Bash, and other software used in the data analysis pipeline. 
    - **Do this:**  `01_data_import.Rmd`. 
    - **Do not do this:** `Data Import.Rmd`. 

  - All other file names should be written in title case.  
    - **Do this:**  `Cannell CITI Certificate.pdf`. 
    - **Do not do this:** `cannell citi certificate.pdf`. 

  - File names should be descriptive enough for most people to reasonably be able to figure out what the file contains from the name. 
    - **Do this:**  `Cannell CITI Certificate.pdf`. 
    - **Do not do this:** `CITI.pdf`. 

  - File names should be succinct. 
    - **Do this:**  `Approved Protocol.docx`. 
    - **Do not do this:** `DETECT-RPC - Phase 1 – Focus Groups - Research Protocol Final Accepted Copy.docx`. 

  - File names should only include letters, numbers, underscores, or dashes. Other characters can cause syncing failures and/or issues with other file systems. 
    - **Do this:**  `Materials and Operations.xlsx`. 
    - **Do not do this:** `Materials & Operations.xlsx`. 

  - Files that can be naturally arranged by dates should be. The file name should begin with the date written in the **yyyy-mm-dd** format. This format is important because dates written in this format will naturally be arranged in correct chronological order across years. Some examples of files that may have a natural chronological order include IRB documents, budgets, and meeting minutes. 
    - **Do this:**  `2023-02-17 Budget.xlsx`. 
    - **Do not do this:** `February Budget.xlsx or 02-17-2023 Budget.xlsx`. 

  - Files that can be naturally arranged in a sequential order should be. When doing so, the files names should be sequentially numbered. Single digits should be prefixed with a zero (0). This format is important because single digits written in this format will naturally be arranged in correct sequential order when the number of files in the sequence exceeds 9. Data analysis projects are an example where files may have a natural sequential order. 
    - **Do this:**  `01_data_import.Rmd, 02_data_clean.Rmd, 03_table_01.Rmd, 04_table_04.Rmd`. 
    - **Do not do this:** `1_data_import.Rmd, 2_data_clean.Rmd, table_1.Rmd, my_other_table.Rmd`. 
  - Begin file names with a description of a theme or topic when there are multiple files that will have a similar theme or topic. Doing so will ensure that all of the files with that theme are topic are grouped together in the file list. 
    - **Do this:**  `Reliance Agreement UAB.pdf`, `Reliance Agreement UCSF.pdf`, `Reliance Agreement JHU.pdf`. 
    - **Do not do this:** `UAB Reliance Agreement.pdf`, `UCSF Reliance Agreement.pdf`, `JHU Reliance Agreement.pdf`. 