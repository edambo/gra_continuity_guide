---
lightbox: true
toc-depth: 5
---

# Technologies {#sec-tech .unnumbered}
What technology (application), or technologies, should we use for writing our SOPs? We‚Äôve experimented, and will continue to experiment, with many different applications, processes, and technologies for organizing and managing all aspects of our projects -- including our SOPs. Here is what we‚Äôve found so far. 

### Using OneNote, Word Documents, and Teams/SharePoint Pages 
For now, we know that we want to try to manage as much of our project as possible inside the Microsoft ecosystem. Because Microsoft products are universally the best? Not necessarily. In fact, some members of our team really dislike Microsoft products. Why, then? We want to manage as much of our project as possible inside the Microsoft Ecosystem because (1) UTHealth pays for it; (2) UTHealth IT security approves of it; (3) The majority of our team members ‚Äì internal and external to UTHealth ‚Äì are already familiar with, and have access to, Microsoft products. 

However, even within the Microsoft ecosystem, there are often multiple different applications and technologies we can choose to author and store SOPs. So, which technology should we use? In the table and paragraphs below, we list the pros and cons of using different Microsoft technologies for creating, editing, and accessing SOPs. 

```{r, out.width="300%"}
#| echo: false
#| fig-align: "left"
#| fig-cap: Summary of the pros and cons of using different Microsoft technologies for creating, editing, and accessing SOPs. A detailed discussion of each trait is in the sections below.
knitr::include_graphics(here::here("graphics", "microsoft_tech.png"))
```

#### Formatting 
When it comes to formatting the SOPS, Word has the edge over OneNote and SharePoint pages. Word gives us finer control over formatting and more robust tools. Especially for things like tables. 

#### Custom Styles 

Using styles makes it so much easier to create consistently formatted documents. OneNote, Word, and SharePoint all have some basic built-in styles, but as of this writing, only Word allows us to create custom styles (e.g., the `Code` style and `File Paths` style available in this document). Here is a useful [post](https://answers.microsoft.com/en-us/msoffice/forum/all/copying-style-in-word-for-the-mac/c2487cc6-901b-40a1-a445-77c598da520f) about sharing styles between Word documents. 

#### Mobile Device Access 
Mobile device access refers to the ease with which the SOP can be accessed and edited from a mobile device (i.e., phone or tablet).  

All three technologies have a mobile app; however, the OneNote mobile app probably provides the best overall mobile experience. It allows us to search, read, and edit notes with the fewest number of clicks/taps. Having said that, the difference between the three isn‚Äôt large when the app has an active internet connection.  

#### Offline Access 
Offline access refers to the ease with which the SOP can be accessed and edited in the absence of an active internet connection (e.g., when traveling).  

##### From a desktop/laptop computer without an active internet connection 
OneNote provides the best experience out of the box. We can read and edit notes in the OneNote app, which will be synced with the server when an internet connection is reestablished. The same is true for Word documents, [but only if they are being synced with the computer's file system](https://support.microsoft.com/en-us/office/sync-sharepoint-files-with-the-onedrive-sync-client-groove-exe-59b1de2b-519e-4d3a-8f45-51647cf291cd). We highly recommend doing so. In general, SharePoint will not work without an internet connection.  

##### From a mobile device without an active internet connection 
OneNote provides the best experience out of the box here too. We can read and edit notes in the OneNote app, which will be synced with the server when an internet connection is reestablished. The same is true for Word documents, [but only if they are being synced with the computer's file system](https://support.microsoft.com/en-us/office/sync-sharepoint-files-with-the-onedrive-sync-client-groove-exe-59b1de2b-519e-4d3a-8f45-51647cf291cd). We highly recommend doing so. In general, the SharePoint mobile app will not work without an internet connection. 

#### Portability 
In this context, ‚Äúportability‚Äù refers to the ease with which the SOP can be shared, viewed, copied, and used outside of its current context. For example, if UTHealth decides to stop paying for Microsoft 365 tomorrow, could we access and use the SOPs? 

Word documents are highly portable. OneNote is slightly less so. Why does this matter? We never know what the technology situation will be like tomorrow. There are a number of reasons why we could potentially need to change the technologies and processes we are using. Therefore, the ease with which we could migrate our content to a different technology or process if we needed to is probably worth taking into consideration. Additionally, we often need to collaborate with team members outside of UTHealth. The ease with which team members who do not have internal access to UTHealth‚Äôs systems is another important dimension or portability.  

##### [Exporting OneNote notes](https://support.microsoft.com/en-us/office/export-and-import-onenote-notebooks-a4b60da5-8f33-464e-b1ba-b95ce540f309)  
  - Exporting and importing notebooks through OneNote for the web is only available for notebooks stored on personal OneDrive accounts, not for notebooks stored on OneDrive for Business or SharePoint. For information about exporting notebooks to PDF files from OneNote 2016 for Windows, see [Export notes from OneNote as a PDF](https://support.microsoft.com/en-us/office/export-notes-from-onenote-as-a-pdf-13d173b5-7f4c-45a8-94eb-9354d63af5cd). 
  - This is kind of a big deal. If we ever need to adopt a new technology, migrating all of our notes out of OneNote could be very difficult. 

##### [Exporting SharePoint pages](https://learn.microsoft.com/en-us/sharepoint/administration/export-a-site-list-or-document-library) 
  - Exporting SharePoint pages is also relatively difficult process and requires administrator access.  

#### Permissions 
While we definitely value every team member‚Äôs input into our SOPs, restricting editing permissions to one or two people can be a useful tool for maintaining the integrity of our SOPs. SharePoint has the most robust tools for assigning user permissions. However, these user permissions can be applied to Word documents when they are stored in a SharePoint library. 

#### Searching Documents 

Given the number of documents our research projects contain, the ability to search for documents and search for text within documents is an important consideration. We experimented with searching for documents, and text within documents, in OneNote, Teams, and SharePoint. Here is what we found.  

##### Searching in OneNote 
OneNote has very robust search capabilities. The screenshot below is from the OneNote desktop app. We arbitrarily searched for the word ‚Äúduring.‚Äù OneNote returns a list of linked search results, across notebooks, with the search team highlighted in the text. 

```{r}
#| echo: false
#| fig-align: "left"
knitr::include_graphics(here::here("graphics", "one_note.png"))
```

##### Searching on OneDrive for documents 
For this test, there was a document in OneDrive titled üî¥[[2023-01-20 Multiple complete Records Per MedStar ID.docx](https://uthtmc-my.sharepoint.com/:w:/r/personal/michael_b_cannell_uth_tmc_edu/Documents/02%20Research/04%20DETECT/DETECT%20NIA%20R01/03%20Repositories/detect_clean_mdac_call_logs/issues/2023-01-20%20Multiple%20complete%20Records%20Per%20MedStar%20ID.docx?d=w3e7bc77253eb4f8c8c466eadd8294c59&csf=1&web=1&e=THIPrF)]{.mark}. The document really isn't that important for this example -- we just picked something. It contains the following text, "ID 69967". When we navigate to [OneDrive](https://uthtmc-my.sharepoint.com/personal/michael_b_cannell_uth_tmc_edu/_layouts/15/onedrive.aspx?login_hint=Michael%2EB%2ECannell%40uth%2Etmc%2Eedu) and search for that text string in the search bar, the correct document comes up in the search results. However, the exact spot where the text appears is not shown in the search results.  
```{r}
#| echo: false
#| fig-align: "left"
knitr::include_graphics(here::here("graphics", "one_drive.png"))
``` 

Having said that, it isn't too big of a deal to just open the document and do a search for the text string in the document.  

##### Searching on SharePoint for documents 
For this test, there was a document in the [DETECT SharePoint document library](https://uthtmc.sharepoint.com/sites/SPHDETECT-RPC/Shared%20Documents/Forms/AllItems.aspx?csf=1&web=1&e=FZ7xxt&FolderCTID=0x0120004E8A92AA55795C42852C8A438D043D68&viewid=37263261%2D85dd%2D48f3%2D9aae%2D93321747db5e) titled, üî¥[SOPs.docx.]{.mark} Again, there is nothing special about this document. We‚Äôre just using it as an example. It contains the following text, "A standard operation procedure". When we navigate to the [DETECT SharePoint document library](https://uthtmc.sharepoint.com/sites/SPHDETECT-RPC/Shared%20Documents/Forms/AllItems.aspx?csf=1&web=1&e=FZ7xxt&FolderCTID=0x0120004E8A92AA55795C42852C8A438D043D68&viewid=37263261%2D85dd%2D48f3%2D9aae%2D93321747db5e) and search for that text string in the search bar, the correct document comes up in the search results. However, the exact spot where the text appears is not shown in the search results at first.  
```{r}
#| echo: false
#| fig-align: "left"
knitr::include_graphics(here::here("graphics", "share_point.png"))
``` 

Having said that, it isn't too big of a deal to just open the document and do a search for the text string in the document. Additionally, if we click "Expand search to all items in this site" at the bottom of the search results screen: 
```{r}
#| echo: false
#| fig-align: "left"
knitr::include_graphics(here::here("graphics", "expand_search.png"))
``` 

Then SharePoint will return a more detailed list of linked search results that include a preview of the text string located in the document.Graphical user interface, text, application, email
```{r}
#| echo: false
#| fig-align: "left"
knitr::include_graphics(here::here("graphics", "sharepoint_detailed_list.png"))
```

##### Searching SharePoint pages 
For this test, we added a text web part to the [DETECT SharePoint homepage](https://uthtmc.sharepoint.com/sites/SPHDETECT-RPC/SitePages/Home.aspx) that said, ‚ÄúWelcome to our DETECT SharePoint site!‚Äù When we navigate to the DETECT SharePoint homepage and search for that text string in the search bar, the correct document comes up in the search results and it includes a preview of the text string located in the document. 
```{r}
#| echo: false
#| fig-align: "left"
knitr::include_graphics(here::here("graphics", "sharepoint_pages.png"))
```